swagger: "2.0"
info:
  version: "0.0.1"
  title: User Manager
  description: >
    This is a sample API for managing a database of users.  User accounts can be created, deleted, edited, and retrieved.
    Users can also log-in, which will create a session cookie. Logging out will delete the cookie.
host: localhost:10010
consumes:
  - application/json
produces:
  - application/json

definitions:
  # A simple username/password combo for logging in
  login:
    required: [username, password]
    properties:
      username:
        type: string
        minLength: 1
      password:
        type: string
        minLength: 1

  # The user schema is defined in the "user.yaml" file.
  # Swagger-Server will automatically convert the user.yaml
  # file to JSON format
  user:
    description: a registered user
    required: [username, password, name]
    properties:
      username:
        type: string
        minLength: 4
        maxLength: 20
        pattern: "^\\w+$"   # only allows alphanumeric characters
        description: username must be unique
      password:
        type: string
        minLength: 4
        description: a super-secure, four-character password :)
      name:
        type: string
        minLength: 1
        description: the user's real name

    example:
      username: jdoe
      name: John Doe

  trip:
    description: a registered trip
    required: [destination, startDate, endDate]
    properties:
      destination:
        type: string
        minLength: 1
        maxLength: 20
        description: name of the destination
      startDate:
        type: string
        format: date-time
        description: start date
      endDate:
        type: string
        format: date-time
        description: end date
      comment:
        type: string
        minLength: 1
        maxLength: 2000
        description: trip comment

# NOTE: This does NOT set global parameters for all operations.
# It just defines parameter templates that can be referenced by operations (i.e. it saves typing)
parameters:
  sessionCookie: &sessionCookie
    name: Cookie
    in: header
    required: true
    type: string
    description: The session cookie

  username: &username
    name: username
    in: path
    required: true
    type: string
    description: This is the {username} path parameter

  userData: &userData
    name: body
    in: body
    required: true
    schema:
      $ref: "#/definitions/user"
    description: The user data for create/update operations
    
  tripId: &tripId
    name: tripId
    in: path
    required: true
    type: string
    description: This is the {tripId} path parameter



paths:
  /users:
    x-swagger-router-controller: users
    get:
      operationId: getAll
      summary: Returns all users in the database.  
      description: Only the "admin" user can access this.
      responses:
        200:
          description: Returns the list of users
          schema:
            type: array
            items:
              $ref: "#/definitions/user"
        401:
          description: Hey! You're not the "admin" user!

    post:
      operationId: save
      summary: Creates a new user
      description: Only the "admin" user can create users.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/user"
          description: The user account to create
      responses:
        201:
          description: New user was created successfully
          schema:
            $ref: "#/definitions/user"
          headers:
            Location:
              type: string
              description: The Server returns the URL of the new user
        400:
          description: Bad JSON formatting in the request


  /users/{username}:
    x-swagger-router-controller: users
    get:
      operationId: getOne
      summary: Retrieves a user
      description: >
        users can only retrieve their own account, not other users'. Except for the "admin" user, who can retrieve anyone.
      parameters:
        - $ref: "#/parameters/username"
        - $ref: "#/parameters/sessionCookie"
      responses:
        200:
          description: Returns the user's data
          schema:
            $ref: "#/definitions/user"
        401:
          description: You tried to retrieve someone else's account, and you're not the "admin" user.
        404:
          description: The {username} was not found

    post:
      operationId: updateOne
      summary: Edits a user
      description: >
        Users can only edit their own account, not other users'.  Except for the "admin" user, who can edit anyone.
      parameters:
        - $ref: "#/parameters/username"
        - $ref: "#/parameters/userData"
      responses:
        200:
          description: User data was saved successfully
          schema:
            $ref: "#/definitions/user"
        400:
          description: Bad JSON formatting in the request
        401:
          description: You tried to edit someone else's account, and you're not the "admin" user.
        404:
          description: The {username} was not found

    delete:
      summary: Deletes a user
      description: >
        Users can only delete their own account, not other users'.  Except for the "admin" user, who can delete anyone.
      parameters:
        - $ref: "#/parameters/username"
        - $ref: "#/parameters/sessionCookie"
      responses:
        204:
          description: User account was deleted
        401:
          description: You tried to edit someone else's account, and you're not the "admin" user.
        404:
          description: The {username} was not found


  /login:
    x-swagger-router-controller: users
    post:
      operationId: login
      summary: Logs in
      description: |
        Try logging in with username "jdoe" and password "jdoe".
        Then try logging in with username "admin" and password "admin".
      parameters:
        - name: body
          in: body
          required: true
          description: The login credentials
          schema:
            $ref: "#/definitions/login"
      responses:
        200:
          description: Login was successful
          schema:
            $ref: "#/definitions/user"
          headers:
            Set-Cookie:
              type: string
              description: The session cookie
              default: demo-session-id=123456789012345678901234567890


  /logout:
    x-swagger-router-controller: users
    get:
      operationId: logout
      summary: Logs out the given user
      description: >
        Users can only log themselves out, not other users. Except the "admin" user, who can log-out anyone.
      responses:
        204:
          description: Logout was successful

  /trips:
    x-swagger-router-controller: trips
    get:
      operationId: getAllTrips
      summary: Returns all trips in the database.
      description: Only the "admin" user can access this.
      responses:
        200:
          description: Returns the list of trips
          schema:
            type: array
            items:
              $ref: "#/definitions/trip"
        401:
          description: Hey! You're not the "admin" trip!

    post:
      operationId: saveTrip
      summary: Creates a new trip
      description: Only the "admin" trip can create trips.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/trip"
          description: The trip account to create
      responses:
        201:
          description: New trip was created successfully
          schema:
            $ref: "#/definitions/trip"
          headers:
            Location:
              type: string
              description: The Server returns the URL of the new trip
        400:
          description: Bad JSON formatting in the request
          
  /trips/{tripId}:
    x-swagger-router-controller: trips
    get:
      operationId: getOneTrip
      summary: Retrieves a trip
      description: >
        users can only retrieve their own account, not other users'. Except for the "admin" user, who can retrieve anyone.
      parameters:
        - $ref: "#/parameters/tripId"
      responses:
        200:
          description: Returns the user's data
        401:
          description: You tried to retrieve someone else's account, and you're not the "admin" user.
        404:
          description: The {username} was not found

    post:
      operationId: updateTrip
      summary: Edits a trip
      description: Update an existing trip
      parameters:
        - $ref: "#/parameters/tripId"
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/trip"
          description: The user account to create
      responses:
        200:
          description: Trip data was saved successfully
          schema:
            $ref: "#/definitions/trip"
        400:
          description: Bad JSON formatting in the request
        401:
          description: You tried to edit someone else's account, and you're not the "admin" user.
        404:
          description: The {tripId} was not found


    delete:
      operationId: deleteTrip
      summary: Deletes a trip
      description: >
        users can only retrieve their own account, not other users'. Except for the "admin" user, who can retrieve anyone.
      parameters:
        - $ref: "#/parameters/tripId"
      responses:
        204:
          description: Trip deleted successfully
        500:
          description: There was an error deleting the trip
